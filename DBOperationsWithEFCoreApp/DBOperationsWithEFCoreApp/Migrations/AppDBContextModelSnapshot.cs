// <auto-generated />
using System;
using DBOperationsWithEFCoreApp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Oracle.EntityFrameworkCore.Metadata;

namespace DBOperationsWithEFCoreApp.Migrations
{
    [DbContext(typeof(AppDBContext))]
    partial class AppDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DBOperationsWithEFCoreApp.Data.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ID")
                        .HasAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("CREATEDON");

                    b.Property<string>("Description")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("DESCRIPTION");

                    b.Property<bool>("IsActive")
                        .HasColumnType("NUMBER(1)")
                        .HasColumnName("ISACTIVE");

                    b.Property<int>("LanguageId")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("LANGUAGEID");

                    b.Property<int>("NoOfPages")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("NOOFPAGES");

                    b.Property<string>("Title")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("TITLE");

                    b.HasKey("Id");

                    b.HasIndex("LanguageId");

                    b.ToTable("BOOKS");
                });

            modelBuilder.Entity("DBOperationsWithEFCoreApp.Data.BookPrice", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ID")
                        .HasAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Amount")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("AMOUNT");

                    b.Property<int>("BookId")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("BOOKID");

                    b.Property<int>("CurrencyId")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("CURRENCYID");

                    b.Property<int?>("CurrencyTypeId")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("CURRENCYTYPEID");

                    b.HasKey("id");

                    b.HasIndex("CurrencyTypeId");

                    b.ToTable("BOOKPRICES");
                });

            modelBuilder.Entity("DBOperationsWithEFCoreApp.Data.CurrencyType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ID")
                        .HasAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Currency")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("CURRENCY");

                    b.Property<string>("Description")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("DESCRIPTION");

                    b.HasKey("Id");

                    b.ToTable("CURRENCYTYPES");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Currency = "INR",
                            Description = "Indian INR"
                        },
                        new
                        {
                            Id = 2,
                            Currency = "dollar",
                            Description = "Dollar"
                        },
                        new
                        {
                            Id = 3,
                            Currency = "Euro",
                            Description = "Euro"
                        },
                        new
                        {
                            Id = 4,
                            Currency = "Dinar",
                            Description = "Dinar"
                        });
                });

            modelBuilder.Entity("DBOperationsWithEFCoreApp.Data.Language", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ID")
                        .HasAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("DESCRIPTION");

                    b.Property<string>("Title")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("TITLE");

                    b.HasKey("Id");

                    b.ToTable("LANGUAGES");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "English",
                            Title = "English"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Hindi",
                            Title = "Hindi"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Malayalam",
                            Title = "Malayalam"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Tamil",
                            Title = "Tamil"
                        });
                });

            modelBuilder.Entity("DBOperationsWithEFCoreApp.Data.Book", b =>
                {
                    b.HasOne("DBOperationsWithEFCoreApp.Data.Language", "Language")
                        .WithMany("Books")
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Language");
                });

            modelBuilder.Entity("DBOperationsWithEFCoreApp.Data.BookPrice", b =>
                {
                    b.HasOne("DBOperationsWithEFCoreApp.Data.CurrencyType", "CurrencyType")
                        .WithMany("BookPrice")
                        .HasForeignKey("CurrencyTypeId");

                    b.Navigation("CurrencyType");
                });

            modelBuilder.Entity("DBOperationsWithEFCoreApp.Data.CurrencyType", b =>
                {
                    b.Navigation("BookPrice");
                });

            modelBuilder.Entity("DBOperationsWithEFCoreApp.Data.Language", b =>
                {
                    b.Navigation("Books");
                });
#pragma warning restore 612, 618
        }
    }
}
